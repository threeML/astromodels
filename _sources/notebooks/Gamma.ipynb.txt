{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e7d4b719",
   "metadata": {
    "papermill": {
     "duration": 0.004021,
     "end_time": "2025-10-02T02:20:48.497733",
     "exception": false,
     "start_time": "2025-10-02T02:20:48.493712",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gamma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3f6b32e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:48.505877Z",
     "iopub.status.busy": "2025-10-02T02:20:48.505469Z",
     "iopub.status.idle": "2025-10-02T02:20:50.426786Z",
     "shell.execute_reply": "2025-10-02T02:20:50.426188Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 1.927134,
     "end_time": "2025-10-02T02:20:50.428193",
     "exception": false,
     "start_time": "2025-10-02T02:20:48.501059",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "facc10bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:50.431438Z",
     "iopub.status.busy": "2025-10-02T02:20:50.431086Z",
     "iopub.status.idle": "2025-10-02T02:20:50.439601Z",
     "shell.execute_reply": "2025-10-02T02:20:50.438972Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.01149,
     "end_time": "2025-10-02T02:20:50.441005",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.429515",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "positive_prior = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bd0392d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:50.443985Z",
     "iopub.status.busy": "2025-10-02T02:20:50.443833Z",
     "iopub.status.idle": "2025-10-02T02:20:50.451768Z",
     "shell.execute_reply": "2025-10-02T02:20:50.451358Z"
    },
    "papermill": {
     "duration": 0.010722,
     "end_time": "2025-10-02T02:20:50.453038",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.442316",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Gamma\"\n",
    "positive_prior = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c431631c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:50.455905Z",
     "iopub.status.busy": "2025-10-02T02:20:50.455753Z",
     "iopub.status.idle": "2025-10-02T02:20:50.465073Z",
     "shell.execute_reply": "2025-10-02T02:20:50.464437Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.012192,
     "end_time": "2025-10-02T02:20:50.466425",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.454233",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if not positive_prior:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "else:\n",
    "    \n",
    "    energy_grid = np.linspace(0,1,1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd4957cf",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.001111,
     "end_time": "2025-10-02T02:20:50.468845",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.467734",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5a2a2e45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:50.472043Z",
     "iopub.status.busy": "2025-10-02T02:20:50.471866Z",
     "iopub.status.idle": "2025-10-02T02:20:50.476096Z",
     "shell.execute_reply": "2025-10-02T02:20:50.475555Z"
    },
    "papermill": {
     "duration": 0.007291,
     "end_time": "2025-10-02T02:20:50.477297",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.470006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A gamma distribution function</li>\n",
       "\n",
       "<li>formula: $ f(x,\\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.5</li>\n",
       "\n",
       "<li>desc: first shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: second shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A gamma distribution function\n",
       "  * formula: $ f(x,\\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$\n",
       "  * parameters:\n",
       "    * alpha:\n",
       "      * value: 0.5\n",
       "      * desc: first shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: 1.0\n",
       "      * desc: second shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cf0858f",
   "metadata": {
    "papermill": {
     "duration": 0.001373,
     "end_time": "2025-10-02T02:20:50.480128",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.478755",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f046f1fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:50.483330Z",
     "iopub.status.busy": "2025-10-02T02:20:50.483173Z",
     "iopub.status.idle": "2025-10-02T02:20:50.585244Z",
     "shell.execute_reply": "2025-10-02T02:20:50.584659Z"
    },
    "papermill": {
     "duration": 0.106251,
     "end_time": "2025-10-02T02:20:50.587668",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.481417",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'probability')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue, lw=3)\n",
    "\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"probability\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "698d5f41",
   "metadata": {
    "papermill": {
     "duration": 0.001411,
     "end_time": "2025-10-02T02:20:50.591513",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.590102",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Number Generation\n",
    "\n",
    "This is how we can generate random numbers from the prior.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "32c3bfb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-02T02:20:50.595823Z",
     "iopub.status.busy": "2025-10-02T02:20:50.595622Z",
     "iopub.status.idle": "2025-10-02T02:20:50.976769Z",
     "shell.execute_reply": "2025-10-02T02:20:50.976159Z"
    },
    "papermill": {
     "duration": 0.385406,
     "end_time": "2025-10-02T02:20:50.978518",
     "exception": false,
     "start_time": "2025-10-02T02:20:50.593112",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'N')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "u = np.random.uniform(0,1, size=5000)\n",
    "\n",
    "draws = [func.from_unit_cube(x) for x in u]\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.hist(draws, color=green, bins=50)\n",
    "\n",
    "ax.set_xlabel(\"value\")\n",
    "ax.set_ylabel(\"N\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 3.745035,
   "end_time": "2025-10-02T02:20:51.420257",
   "environment_variables": {},
   "exception": null,
   "input_path": "Gamma.ipynb",
   "output_path": "/Users/runner/work/astromodels/astromodels/docs/notebooks/Gamma.ipynb",
   "parameters": {
    "func_name": "Gamma",
    "positive_prior": true
   },
   "start_time": "2025-10-02T02:20:47.675222",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}