{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4c1dfc9d",
   "metadata": {
    "papermill": {
     "duration": 0.003127,
     "end_time": "2025-10-01T20:08:50.849392",
     "exception": false,
     "start_time": "2025-10-01T20:08:50.846265",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Gamma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6c8a365c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:50.854749Z",
     "iopub.status.busy": "2025-10-01T20:08:50.853935Z",
     "iopub.status.idle": "2025-10-01T20:08:53.698470Z",
     "shell.execute_reply": "2025-10-01T20:08:53.697660Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.848955,
     "end_time": "2025-10-01T20:08:53.700741",
     "exception": false,
     "start_time": "2025-10-01T20:08:50.851786",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5126ce72",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:53.705522Z",
     "iopub.status.busy": "2025-10-01T20:08:53.705026Z",
     "iopub.status.idle": "2025-10-01T20:08:53.710746Z",
     "shell.execute_reply": "2025-10-01T20:08:53.710056Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.009914,
     "end_time": "2025-10-01T20:08:53.712209",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.702295",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "positive_prior = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "68f07d01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:53.715887Z",
     "iopub.status.busy": "2025-10-01T20:08:53.715514Z",
     "iopub.status.idle": "2025-10-01T20:08:53.720688Z",
     "shell.execute_reply": "2025-10-01T20:08:53.720086Z"
    },
    "papermill": {
     "duration": 0.008237,
     "end_time": "2025-10-01T20:08:53.722042",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.713805",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Gamma\"\n",
    "positive_prior = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1ef3bfec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:53.726175Z",
     "iopub.status.busy": "2025-10-01T20:08:53.725743Z",
     "iopub.status.idle": "2025-10-01T20:08:53.732695Z",
     "shell.execute_reply": "2025-10-01T20:08:53.732106Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.010562,
     "end_time": "2025-10-01T20:08:53.733954",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.723392",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if not positive_prior:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "else:\n",
    "    \n",
    "    energy_grid = np.linspace(0,1,1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3673dab",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.001348,
     "end_time": "2025-10-01T20:08:53.736745",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.735397",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1f80b14b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:53.740312Z",
     "iopub.status.busy": "2025-10-01T20:08:53.740122Z",
     "iopub.status.idle": "2025-10-01T20:08:53.745355Z",
     "shell.execute_reply": "2025-10-01T20:08:53.744901Z"
    },
    "papermill": {
     "duration": 0.008324,
     "end_time": "2025-10-01T20:08:53.746506",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.738182",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A gamma distribution function</li>\n",
       "\n",
       "<li>formula: $ f(x,\\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.5</li>\n",
       "\n",
       "<li>desc: first shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: second shape parameter</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A gamma distribution function\n",
       "  * formula: $ f(x,\\alpha, \\beta)=\\frac{\\beta^\\alpha x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}$\n",
       "  * parameters:\n",
       "    * alpha:\n",
       "      * value: 0.5\n",
       "      * desc: first shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.05\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: 1.0\n",
       "      * desc: second shape parameter\n",
       "      * min_value: 0.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa8f1ceb",
   "metadata": {
    "papermill": {
     "duration": 0.001828,
     "end_time": "2025-10-01T20:08:53.751685",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.749857",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "59f3ac5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:53.756459Z",
     "iopub.status.busy": "2025-10-01T20:08:53.756283Z",
     "iopub.status.idle": "2025-10-01T20:08:53.866441Z",
     "shell.execute_reply": "2025-10-01T20:08:53.865757Z"
    },
    "papermill": {
     "duration": 0.114407,
     "end_time": "2025-10-01T20:08:53.867674",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.753267",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'probability')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue, lw=3)\n",
    "\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"probability\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "967ab949",
   "metadata": {
    "papermill": {
     "duration": 0.001488,
     "end_time": "2025-10-01T20:08:53.870851",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.869363",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Number Generation\n",
    "\n",
    "This is how we can generate random numbers from the prior.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b045191f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-01T20:08:53.878678Z",
     "iopub.status.busy": "2025-10-01T20:08:53.876847Z",
     "iopub.status.idle": "2025-10-01T20:08:54.313941Z",
     "shell.execute_reply": "2025-10-01T20:08:54.313494Z"
    },
    "papermill": {
     "duration": 0.442583,
     "end_time": "2025-10-01T20:08:54.315203",
     "exception": false,
     "start_time": "2025-10-01T20:08:53.872620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'N')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "u = np.random.uniform(0,1, size=5000)\n",
    "\n",
    "draws = [func.from_unit_cube(x) for x in u]\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.hist(draws, color=green, bins=50)\n",
    "\n",
    "ax.set_xlabel(\"value\")\n",
    "ax.set_ylabel(\"N\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4.852528,
   "end_time": "2025-10-01T20:08:54.847338",
   "environment_variables": {},
   "exception": null,
   "input_path": "Gamma.ipynb",
   "output_path": "/Users/runner/work/astromodels/astromodels/docs/notebooks/Gamma.ipynb",
   "parameters": {
    "func_name": "Gamma",
    "positive_prior": true
   },
   "start_time": "2025-10-01T20:08:49.994810",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}